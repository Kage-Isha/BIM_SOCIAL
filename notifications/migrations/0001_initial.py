# Generated by Django 4.2.7 on 2025-08-25 17:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chat', '0001_initial'),
        ('social', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_on_follow', models.BooleanField(default=True)),
                ('email_on_like', models.BooleanField(default=True)),
                ('email_on_comment', models.BooleanField(default=True)),
                ('email_on_mention', models.BooleanField(default=True)),
                ('email_on_message', models.BooleanField(default=True)),
                ('push_on_follow', models.BooleanField(default=True)),
                ('push_on_like', models.BooleanField(default=True)),
                ('push_on_comment', models.BooleanField(default=True)),
                ('push_on_mention', models.BooleanField(default=True)),
                ('push_on_message', models.BooleanField(default=True)),
                ('app_on_follow', models.BooleanField(default=True)),
                ('app_on_like', models.BooleanField(default=True)),
                ('app_on_comment', models.BooleanField(default=True)),
                ('app_on_mention', models.BooleanField(default=True)),
                ('app_on_message', models.BooleanField(default=True)),
                ('digest_frequency', models.CharField(choices=[('never', 'Never'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='weekly', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications_settings',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('follow', 'Follow'), ('like', 'Like'), ('comment', 'Comment'), ('mention', 'Mention'), ('message', 'Message'), ('post', 'New Post'), ('system', 'System')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField(max_length=500)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('related_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='social.comment')),
                ('related_conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.conversation')),
                ('related_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='social.post')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications_notification',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', '-created_at'], name='notificatio_recipie_a972ce_idx'), models.Index(fields=['recipient', 'is_read', '-created_at'], name='notificatio_recipie_684eac_idx'), models.Index(fields=['notification_type', '-created_at'], name='notificatio_notific_d8746a_idx')],
            },
        ),
    ]
